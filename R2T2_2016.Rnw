\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{hyperref}
\hypersetup{
    colorlinks,
    citecolor=black,
    filecolor=black,
    linkcolor=black,
    urlcolor=black
}
\usepackage[a4paper, margin=1.5cm]{geometry}
\title{R2T2 2016}
\author{Wafa Johal}

\begin{document}
\maketitle
\tableofcontents


\SweaveOpts{concordance=TRUE}

<<eval=T,echo=F>>=
library(psych)
library(ggplot2)
library(stargazer)
library(scales)
library(plyr)
library(reshape2)
@

<<eval=true,echo=false>>=
prefix = "~/Documents/CODING/DATA_ANALYSIS/R2T2/" # Data_All_161110_E Data_All_161110(numeric)_E Data_All_161110_F Data_All_161110_F2

##### THEME
theme_Publication <- function(base_size=11, base_family="Helvetica") {
      library(grid)
      library(ggthemes)
      (theme_foundation(base_size=base_size, base_family=base_family)
       + theme(plot.title = element_text(face = "bold",
                                         size = rel(1.2), hjust = 0.5),
               text = element_text(),
               panel.background = element_rect(colour = NA),
               plot.background = element_rect(colour = NA),
               panel.border = element_rect(colour = NA),
               axis.title = element_text(face = "bold",size = rel(1)),
               axis.title.y = element_text(angle=90,vjust =2),
               axis.title.x = element_text(vjust = -0.2),
               axis.text = element_text(), 
               axis.line = element_line(colour="black"),
               axis.ticks = element_line(),
               panel.grid.major = element_line(colour="#f0f0f0"),
               panel.grid.minor = element_blank(),
               legend.key = element_rect(colour = NA),
               legend.position = "bottom",
               legend.direction = "horizontal",
               legend.key.size= unit(0.2, "cm"),
               legend.margin = unit(0, "cm"),
               legend.title = element_text(face="italic"),
               plot.margin=unit(c(8,4,4,4),"mm"),
               strip.background=element_rect(colour="#f0f0f0",fill="#f0f0f0"),
               strip.text = element_text(face="bold")
          ))
      
}

#### COLORS
scale_fill_discrete_binary <- function(...){
      library(scales)
      discrete_scale("fill","Publications",manual_pal(values = c("#00a6a6","#f49f0a")), ...)}

scale_fill_discrete_list <- function(...){
      library(scales)
      discrete_scale("fill","Publications",manual_pal(values = c("#5f0f40","#f49f0a","#9a031e","#00a6a6","#e36414","#242f40","#008148","#15b097","#ef2917","#034732","#80ced7","#d5d6aa","#9dbbae")), ...)}


mred2 = "#d7263d"
mred1 = "#f46036"
mgreen1 = "#a8dadc"
mgreen2 = "#457b9d"
mneutral = "#f1faee"

scale_fill5_rgn<- function(...){
      library(scales)
      discrete_scale("fill","Publications",manual_pal(values = c(mred2,mred1,mgreen1,mgreen2,mneutral)), ...)}

scale_fill5_grn<- function(...){
      library(scales)
      discrete_scale("fill","Publications",manual_pal(values = c(mgreen2,mgreen1,mred1,mred2,mneutral)), ...)}

scale_fill5_grn2<- function(...){
      library(scales)
      discrete_scale("fill","Publications",manual_pal(values = c(mgreen2,mred2,mneutral)), ...)}

scale_fill5_rgn2<- function(...){
      library(scales)
      discrete_scale("fill","Publications",manual_pal(values = c(mred2,mgreen2,mneutral)), ...)}
  
  
low_level = "#80b240"
high_level = "#293a13"
scale_fill_continous_list = scale_fill_gradient(low = low_level, high = high_level)


scale_colour_Publication <- function(...){
      library(scales)
      discrete_scale("colour","Publication",manual_pal(values = c("#386cb0","#fdb462","#7fc97f","#ef3b2c","#662506","#a6cee3","#fb9a99","#984ea3","#ffff33")), ...)
}

##### TOOLS FUNCTIONS
## Gives count, mean, standard deviation, standard error of the mean, and confidence interval (default 95%).
##   data: a data frame.
##   measurevar: the name of a column that contains the variable to be summariezed
##   groupvars: a vector containing names of columns that contain grouping variables
##   na.rm: a boolean that indicates whether to ignore NA's
##   conf.interval: the percent range of the confidence interval (default is 95%)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
                      conf.interval=.95, .drop=TRUE) {
    library(plyr)

    # New version of length which can handle NA's: if na.rm==T, don't count them
    length2 <- function (x, na.rm=FALSE) {
        if (na.rm) sum(!is.na(x))
        else       length(x)
    }

    # This does the summary. For each group's data frame, return a vector with
    # N, mean, and sd
    datac <- ddply(data, groupvars, .drop=.drop,
      .fun = function(xx, col) {
        c(N    = length2(xx[[col]], na.rm=na.rm),
          mean = mean   (xx[[col]], na.rm=na.rm),
          sd   = sd     (xx[[col]], na.rm=na.rm)
        )
      },
      measurevar
    )

    # Rename the "mean" column    
    datac <- rename(datac, c("mean" = measurevar))

    datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean

    # Confidence interval multiplier for standard error
    # Calculate t-statistic for confidence interval: 
    # e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
    ciMult <- qt(conf.interval/2 + .5, datac$N-1)
    datac$ci <- datac$se * ciMult

    return(datac)
}

remove_outliers <- function(x, na.rm = TRUE, ...) {
  qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
  H <- 1.5 * IQR(x, na.rm = na.rm)
  y <- x
  y[x < (qnt[1] - H)] <- NA
  y[x > (qnt[2] + H)] <- NA
  y
}


freegeoip <- function(ip, format = ifelse(length(ip)==1,'list','dataframe'))
{
    if (1 == length(ip))
    {
        # a single IP address
        require(rjson)
        url <- paste(c("http://freegeoip.net/json/", ip), collapse='')
        ret <- fromJSON(readLines(url, warn=FALSE))
        if (format == 'dataframe')
            ret <- data.frame(t(unlist(ret)))
        return(ret)
    } else {
        ret <- data.frame()
        for (i in 1:length(ip))
        {
          i=2
        
            r <- freegeoip(ip[i], format="dataframe")

            ret <- rbind(ret, r)
        }
        return(ret)
    }
}   
@





\SweaveOpts{engine=R,eps=FALSE,echo=TRUE,prefix.string=Raw_num/plots/}
\section{Demographic Analysis}
<<eval=true,echo=false>>=
mdata <- read.csv(file.path(prefix,"Raw_num/CSV/Sheet_all_sorted_bis.csv"))
mdata = as.data.frame(apply(mdata,2,function(x)gsub('\\s+', '',x)))
attach(mdata)
@


\subsection{Geography}
<<eval=true,echo=false>>=
locations = mdata[,c("ID.personne.interrogée","ID.collecteur" ,"Date.de.début","Date.de.fin" ,"Adresse.IP", "Âge" )] 
locations$lon =  apply(locations['Adresse.IP'],  1, function(x) freegeoip(x)$longitude)
locations$lat =  apply(locations['Adresse.IP'],  1, function(x) freegeoip(x)$latitude)
locations$city =  apply(locations['Adresse.IP'],  1, function(x) freegeoip(x)$city)

library(leaflet)
library(maps)

# all i want is the world!
world <- map("world", fill = TRUE, plot = FALSE) 
@

<<eval=true,echo=false>>=
# kick out a a widget
m = leaflet(data=world) %>% 
  addTiles() %>% 
  addCircleMarkers(locations$lon, locations$lat, 
                   color = '#ff0000',popup=locations$city)

library(htmlwidgets)
saveWidget(m, file=paste(prefix,"Raw_num/plots/map.html",sep=""))
library(webshot)
webshot(paste(prefix,"Raw_num/plots/map.html",sep=""), file = paste(prefix,"Raw_num/plots/map.png",sep=""),
        cliprect = "viewport")
@
\includegraphics{Raw_num/plots/map.png}


\subsection{Gender}
<<plot_gender,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=gender, fill=gender))+ geom_bar() +scale_fill_discrete_list()+ theme_Publication()
@

Gender data : 
<<eval=T, echo=F>>=
summary(mdata$gender)
@

\subsection{Age}
<<plot_gender_age,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=gender, y=remove_outliers(as.numeric(levels(mdata$Âge)))[mdata$Âge], fill=gender))+ geom_boxplot() +scale_colour_Publication()+ theme_Publication()
@

Age data : 
<<eval=T, echo=F>>=
summary(as.numeric(levels(mdata$Âge)))
@

\subsection{Past usage ...}
<<eval=T, echo=F>>=
attach(mdata)

static_descripteur <- c('ID.personne.interrogée', 'Âge', 'country', 'gender', 'language' )
pastUse = subset.data.frame(mdata, select =  c(static_descripteur,'past_chatt','past_streaming_video','past_robot'))
pastUse <- melt(pastUse, id=c(static_descripteur)) 
@

<<plot_past_use,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(pastUse, aes(x=variable, fill=as.factor(value)))+ geom_bar() + theme_Publication() + xlab('Past Use of') + scale_x_discrete(breaks = c('past_chatt','past_streaming_video','past_robot'),labels=c("Chatting systems","Video streaming", "Robots")) +
 # geom_text(stat='count',aes(label=..count..),vjust=-0.5) +
   scale_fill_manual(breaks = c("1","2"),labels=c("Yes","No"),values=c(mgreen2, mred2)) +coord_flip()
@



\subsubsection{of Chatting systems}
<<plot_chat_net,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=past_chatt, fill=past_chatt))+ geom_bar() +scale_fill_discrete_list()+ theme_Publication()+scale_x_discrete(breaks = c("1","2"),labels=c("Yes","No")) + guides(fill=FALSE) + xlab('Chatted on the Internet') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{of video streaming systems}
<<plot_video_stream,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=past_streaming_video, fill=past_streaming_video))+ geom_bar() +scale_fill_discrete_list()+ theme_Publication()+scale_x_discrete(breaks = c("1","2"),labels=c("Yes","No")) + guides(fill=FALSE) + xlab('Saw video streaming events') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{of robots}
<<plot_past_robot,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=past_robot, fill=past_robot))+ geom_bar() +scale_fill_discrete_list()+ theme_Publication()+scale_x_discrete(breaks = c("1","2"),labels=c("Yes","No")) + guides(fill=FALSE) + xlab('Activities with robots') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsection{Skils self-perception}
<<eval=T, echo=F>>=
skillPerception = subset.data.frame(mdata, select =  c(static_descripteur,'en_communication','en_programmation','en_gestion','en_organisation'))
skillPerception <- melt(skillPerception, id=c(static_descripteur)) 
@

<<plot_skillPerception,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(skillPerception, aes(x=variable, fill=as.factor(value)))+ geom_bar() + theme_Publication() + xlab('Skils self-perception in') + scale_x_discrete(breaks = c('en_communication','en_programmation','en_gestion','en_organisation'),labels=c("Communcation","Programming", "Managing","Organizing")) +
 # geom_text(stat='count',aes(label=..count..),vjust=-0.5) +
   scale_fill_manual(breaks = c("1","2","3","4","NA"),labels=c("not very good","Could do better","Good","Very Good","Idk"),values=c(mred2,mred1, mgreen1,mgreen2,mneutral)) +coord_flip()
@

\subsubsection{in communication}
<<plot_skill_selfp_com,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=en_communication, fill=en_communication))+ geom_bar() +scale_fill5_rgn()+ theme_Publication()+scale_x_discrete(breaks = c("1","2","3","4"),labels=c("not very good","Could do better","Good","Very Good")) + guides(fill=FALSE) + xlab('Skils self-perception In Communcation') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5) 
@

\subsubsection{in programming}
<<plot_skill_selfp_prog,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=en_programmation, fill=en_programmation))+ geom_bar() +scale_fill5_rgn()+ theme_Publication()+scale_x_discrete(breaks = c("1","2","3","4"),labels=c("not very good","Could do better","Good","Very Good")) + guides(fill=FALSE) + xlab('Skils self-perception In Programming') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{in managing}
<<plot_skill_selfp_manag,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=en_gestion, fill=en_gestion))+ geom_bar() +scale_fill_discrete_list()+ theme_Publication()+scale_x_discrete(breaks = c("1","2","3","4"),labels=c("not very good","Could do better","Good","Very Good")) + guides(fill=FALSE) + xlab('Skils self-perception In Managing') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{in Organizing}
<<plot_skill_selfp_organi,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=en_organisation, fill=en_organisation))+ geom_bar() +scale_fill5_rgn()+ theme_Publication()+scale_x_discrete(breaks = c("1","2","3","4"),labels=c("not very good","Could do better","Good","Very Good")) + guides(fill=FALSE) + xlab('Skils self-perception In Organizing') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@
\subsection{General perception}
<<eval=T, echo=F>>=
gperce_breaks = c('prog_ennuyant','pratik_amel','meilleur_prog','plus_de_robotik','filles_moins_prog',
                  'aime_prog','prog_fun_team','robotik_interet','hard_prog','useless_challenge',
                  'serious_input','ask_adult','ask_teamate','happy_help','good_team',
                  'student_help_robotik','suggestions_followed','take_initiatives','solo_worker',
                  'split_work', 'unorganized_team')


gperce_labels = c('Programming is boring','When I practise my programming improves',
                  'Compared to other students I am a good programmer','I wish I had more time for robotics at school','Girls enjoy programming less than boys do',
                  'I like what I program','Programming is more fun when it’s in team','I’m interested in robotics','Programming is difficult','I’ve learned a lot of unnecessary things',
                  'My suggestions are taken seriously by others','I spoke to the teacher if I had a problem','I discussed with my teammates if I had a problem','I am pleased with the support I have received','We have a nice, positive group environment ',
                  'Robotics is a subject where students help each other','All my suggestions were followed','I was taking initiatives in the group','I was not always asking my teammates their opinion',
                  'We splitted the work equally between the team members', 'Our team was noisy and disordely')
generalPerception = subset.data.frame(mdata, select =  c(static_descripteur,gperce_breaks))
generalPerception <- melt(generalPerception, id=c(static_descripteur)) 
@

<<plot_generalPerception,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(generalPerception, aes(x=variable, fill=as.factor(value)))+ geom_bar() + theme_Publication() + xlab('Skils self-perception in') + scale_x_discrete(breaks = gperce_breaks,labels=gperce_labels) +
 # geom_text(stat='count',aes(label=..count..),vjust=-0.5) +
   scale_fill_manual(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK"),values=c(mred2,mred1, mgreen1,mgreen2,mneutral)) +coord_flip()
@

\subsubsection{Programming is boring}
<<plot_prog_ennuyant,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=prog_ennuyant, fill=prog_ennuyant))+ geom_bar() +scale_fill5_rgn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('Programming is boring') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{When I practise my programming improves}
<<plot_pratik_amel,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=pratik_amel, fill=pratik_amel))+ geom_bar() +scale_fill5_rgn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('My practice improve my programming') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{Compared to other students I am a good programmer}
<<plot_meilleur_prog,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=meilleur_prog, fill=meilleur_prog))+ geom_bar() +scale_fill5_rgn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{I wish I had more time for robotics at school }
<<plot_plus_de_robotik,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=plus_de_robotik, fill=plus_de_robotik))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..))
@

\subsubsection{Girls enjoy programming less than boys do }
<<plot_filles_moins_prog,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=filles_moins_prog, fill=filles_moins_prog))+ geom_bar() +scale_fill5_rgn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{I like what I program }
<<plot_aime_prog,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=aime_prog, fill=aime_prog))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{Programming is more fun when it’s in team}
<<plot_prog_fun_team,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=prog_fun_team, fill=prog_fun_team))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{I’m interested in robotics}
<<plot_robotik_interet,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=robotik_interet, fill=robotik_interet))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{Robotics is difficult}
<<plot_hard_robotik,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=hard_robotik, fill=hard_robotik))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{Programming is difficult}
<<plot_hard_prog,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=hard_prog, fill=hard_prog))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{I’ve learned a lot of unnecessary things preparing the challenge}
<<plot_useless_challenge,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=useless_challenge, fill=useless_challenge))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{My suggestions are taken seriously by other members of my team}
<<plot_serious_input,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=serious_input, fill=serious_input))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{I spoke to the teacher if I had a problem}
<<plot_ask_adult,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=ask_adult, fill=ask_adult))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{I discussed with my teammates if I had a problem}
<<plot_ask_teamate,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=ask_teamate, fill=ask_teamate))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{I am pleased with the support I have received for the R2t2 mission}
<<plot_happy_help,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=happy_help, fill=happy_help))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{We have a nice, positive group environment }
<<plot_good_team,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=good_team, fill=good_team))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{Robotics is a subject where students help each other}
<<plot_student_help_robotik,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=student_help_robotik, fill=student_help_robotik))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{I was influencing decision taken in my team}
<<plot_influence_teamates,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=influence_teamates, fill=influence_teamates))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{All my suggestions were followed}
<<plot_suggestions_followed,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=suggestions_followed, fill=suggestions_followed))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{I was taking initiatives in the group}
<<plot_take_initiatives,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=take_initiatives, fill=take_initiatives))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{I was not always asking my teammates their opinion in what I was doing}
<<plot_solo_worker,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=solo_worker, fill=solo_worker))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{We splitted the work equally between the team members}
<<plot_split_work,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=split_work, fill=split_work))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\subsubsection{Our team was noisy and disordely}
<<plot_unorganized_team,fig=T,echo=F,include=T,height=3.5,tidy=TRUE>>=
ggplot(mdata, aes(x=unorganized_team, fill=unorganized_team))+ geom_bar() +scale_fill5_grn()+ theme_Publication()+scale_x_discrete(breaks = c("4","3","2","1","5"),labels=c("Strongly Agree","Agree","Disagree","Strongly disagree","IDK")) + guides(fill=FALSE) + xlab('') +
  geom_text(stat='count',aes(label=..count..),vjust=-0.5)
@

\end{document}